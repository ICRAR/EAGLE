{
    "modelData": {
        "fileType": "palette",
        "repoService": "GitHub",
        "repoBranch": "master",
        "repo": "ICRAR/EAGLE",
        "filePath": "static/template.palette",
        "sha": "",
        "git_url": "",
        "eagleVersion": "v3.0.0",
        "eagleCommitHash": "",
        "schemaVersion": "",
        "readonly": true
    },
    "nodeDataArray": [
        {
            "category": "GroupBy",
            "text": "Group By",
            "description": "A construct that runs an application on a number of inputs and groups the outputs by results",
            "inputApplication": null,
            "inputPorts": [],
            "outputApplication": null,
            "outputPorts": [],
            "key": -16,
            "fields": [{
                "text": "Group key",
                "name": "group_key",
                "value": "None",
                "description": "",
                "readonly": false,
                "type": "String",
                "default": "None"
            }, {
                "text": "Group axis",
                "name": "group_axis",
                "value": "frequency",
                "description": "The axis by which to group the inputs together",
                "readonly": false,
                "type": "String",
                "default": "frequency"
            }],
            "readonly": true
        },
        {
            "category": "Gather",
            "text": "Gather",
            "description": "A construct that gathers together multiple inputs and processes them using a specified number of instances",
            "inputApplication": null,
            "inputPorts": [],
            "outputApplication": null,
            "outputPorts": [],
            "key": -15,
            "fields": [{
                "text": "Number of inputs",
                "name": "num_of_inputs",
                "value": 2,
                "description": "The Gather “width”, stating how many partitions each Gather instance will handle",
                "readonly": false,
                "type": "Integer",
                "default": 2
            }, {
                "text": "Gather axis",
                "name": "gather_axis",
                "value": "frequency",
                "description": "The axis by which to gather the inputs together",
                "readonly": false,
                "type": "String",
                "default": "frequency"
            }],
            "readonly": true
        },
        {
            "category": "Scatter",
            "text": "Scatter",
            "description": "A construct that splits inputs into multiple parallel processing instances",
            "inputApplication": null,
            "inputPorts": [],
            "outputApplication": null,
            "outputPorts": [],
            "key": -14,
            "fields": [{
                "text": "Number of copies",
                "name": "num_of_copies",
                "value": 4,
                "description": "The number of outputs generated by this construct",
                "readonly": false,
                "type": "Integer",
                "default": 4
            }, {
                "text": "Scatter axis",
                "name": "scatter_axis",
                "value": "time",
                "description": "The axis used to split the input into multiple outputs",
                "readonly": false,
                "type": "String",
                "default": "time"
            }],
            "readonly": true
        },
        {
            "category": "MKN",
            "text": "MKN",
            "description": "A generalised Scatter and Gather node. MKN stands for a multiplicity of M on the input side of the construct, K internal and N on the output side.",
            "inputApplication": null,
            "inputPorts": [],
            "outputApplication": null,
            "outputPorts": [],
            "key": -18,
            "fields": [{
                "text": "M",
                "name": "m",
                "value": 1,
                "description": "The input-side multiplicity of this construct",
                "readonly": false,
                "type": "Integer",
                "default": 1
            }, {
                "text": "K",
                "name": "k",
                "value": 1,
                "description": "The internal multiplicity of this construct",
                "readonly": false,
                "type": "Integer",
                "default": 1
            }, {
                "text": "N",
                "name": "n",
                "value": 1,
                "description": "The output-side multiplicity of this construct",
                "readonly": false,
                "type": "Integer",
                "default": 1
            }],
            "readonly": true
        },
        {
            "category": "Loop",
            "text": "Loop",
            "description": "Components inside a Loop will be repeatedly executed for a fixed number of times",
            "inputApplication": null,
            "inputPorts": [],
            "outputApplication": null,
            "outputPorts": [],
            "key": -17,
            "fields": [{
                "text": "Number loops",
                "name": "num_of_iter",
                "value": 5,
                "description": "The number of iterations performed by this loop construct",
                "readonly": false,
                "type": "Integer",
                "default": 5
            }],
            "readonly": true
        },
        {
            "category": "ExclusiveForceNode",
            "text": "Exclusive Force Node",
            "description": "A group that completely specifies the computation on a single node. All child components must be deployed to a single node, and no other components can be deployed to the same node.",
            "inputApplication": null,
            "inputPorts": [],
            "outputApplication": null,
            "outputPorts": [],
            "key": -19,
            "fields": [],
            "readonly": true
        },
        {
            "category": "SubGraph",
            "text": "SubGraph",
            "description": "A subsection of a complete graph. Can enclose logical parts of a graph and be collapsed to save space in the graph display.",
            "inputApplication": null,
            "inputPorts": [],
            "outputApplication": null,
            "outputPorts": [],
            "key": -25,
            "fields": [],
            "readonly": true
        },
        {
            "category": "Comment",
            "outputPorts": [],
            "fields": [{
                "text": "Comment",
                "name": "comment",
                "value": "",
                "description": "The text value of the comment",
                "readonly": false,
                "type": "String",
                "default": ""
            }],
            "key": -12,
            "text": "Comment",
            "description": "A node that places a comment in the graph. The comment can be used to communicate important information or intention",
            "inputPorts": [],
            "readonly": true
        },
        {
            "category": "Description",
            "outputPorts": [],
            "fields": [{
                "text": "Description",
                "name": "description",
                "value": "",
                "description": "The text value of the description",
                "readonly": false,
                "type": "String",
                "default": ""
            }],
            "key": -21,
            "text": "Description",
            "description": "A node that places a description in the graph. The description should be used to communicate the purpose of the graph",
            "inputPorts": [],
            "readonly": true
        }
    ],
    "linkDataArray": []
}
